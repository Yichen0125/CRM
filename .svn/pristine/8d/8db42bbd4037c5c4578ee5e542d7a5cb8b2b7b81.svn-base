package com.atguigu.crm.handler;

import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.support.ResourceBundleMessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import org.springframework.web.util.WebUtils;

import com.atguigu.crm.entity.Role;
import com.atguigu.crm.entity.User;
import com.atguigu.crm.orm.Page;
import com.atguigu.crm.service.RoleService;
import com.atguigu.crm.service.UserService;
import com.atguigu.crm.utils.DataUtils;

@RequestMapping("/user")
@Controller
public class UserHandler {

	private static Map<Integer, String> allStatus = new HashMap<>();
	
	static{
		allStatus.put(1, "有效");
		allStatus.put(0, "无效");
	}
	
	@Autowired
	private RoleService roleService;

	@Autowired
	private UserService userService;

	@Autowired
	private ResourceBundleMessageSource messageSource;
	
	@ResponseBody
	@RequestMapping(value="/{id}",method=RequestMethod.DELETE)
	public String deleteUser(@PathVariable("id") Integer id){
		
		userService.deleteUser(id);
		
		return "1";
	}
	
	@RequestMapping(value="/update",method=RequestMethod.PUT)
	public String updateUser(User user){
		
		userService.updateUser(user);
		
		return "redirect:/user/list";
	}

	@RequestMapping("/toEditUI/{id}")
	public String toEditUI(@PathVariable("id") Integer id, Map<String, Object> map) {
		
		List<Role> roles = roleService.getAllList();
		map.put("roles", roles);
		
		User user = userService.getUserById(id);
		map.put("user", user);
		map.put("allStatus", allStatus);
		
		return "user/input";
	}

	@RequestMapping(value = "/save", method=RequestMethod.POST)
	public String saveUser(User user) {

		userService.saveUser(user);

		return "redirect:/user/list";
	}

	@RequestMapping("/toAddUI")
	public String toAddUI(Map<String, Object> map) {

		List<Role> roles = roleService.getAllList();
		map.put("roles", roles);

		User user = new User();
		map.put("user", user);

		map.put("allStatus", allStatus);
		return "user/input";
	}

	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public String showList(@RequestParam(value = "pageNo", required = false, defaultValue = "1") Integer pageNo,
			HttpServletRequest request) {

		Map<String, Object> params = WebUtils.getParametersStartingWith(request, "search_");
		String queryString = DataUtils.encodeParamsToQueryString(params);

		request.setAttribute("queryString", queryString);

		Page<User> page = userService.getPage(pageNo, params);

		request.setAttribute("page", page);

		return "user/list";
	}

	/**
	 * 1. 使用 SpringMVC 提供的 RedirectAttributes API 可以把 key-value 对重定向的情况下,
	 * 在页面上给予显示. 1). 在目标方法的参数中添加 RedirectAttributes 参数. 2). 具体调用
	 * RedirectAttributes 的 addFlashAttribute(key, val) 来添加键值对. 3). 重定向到目标资源.
	 * 但不能直接重定向到其物理页面. 而需要经过 SpringMVC 处理一下.
	 * <mvc:view-controller path="/index" view-name="index"/> 4). 页面上使用
	 * javascript 和 JSTL 标签结合来显示错误消息.
	 * 
	 * 2. 错误消息如何放在国际化资源文件中. 1). 在 SpringMVC 中配置国际化资源文件 配置
	 * org.springframework.context.support.ResourceBundleMessageSource bean. 且
	 * id 必须为 messageSource 2). 在类路径下新建国际化资源文件, 加入 key-value 对. 3). 在 Handler
	 * 中自动装配 ResourceBundleMessageSource 属性 4). 调用 getMessage(String code,
	 * Object[] args, Locale locale) 方法来获取国际化资源文件中的 value 值. 5). Locale
	 * 可以直接在目标方法中传入.
	 */
	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public String login(@RequestParam(value = "name", required = false) String name,
			@RequestParam(value = "password", required = false) String password, HttpSession session,
			RedirectAttributes attributes, Locale locale) {
		User user = userService.login(name, password);
		if (user == null) {
			String code = "error.user.login";
			String message = messageSource.getMessage(code, null, locale);
			attributes.addFlashAttribute("message", message);
			return "redirect:/index";
		}

		session.setAttribute("user", user);
		return "home/success";
	}

}
